name: CI

on:
  push:
    paths:
      - 'terraform/**'
      - 'dbt/**'
  workflow_dispatch:

env:
  SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
  SF_USER:    ${{ secrets.SF_USER }}
  SF_PWD:     ${{ secrets.SF_PWD }}

jobs:
  deploy-terraform:
    name: Deploy Terraform
    runs-on: ubuntu-latest

    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init & Validate
        working-directory: terraform/
        run: |
          terraform fmt -check
          terraform init
          terraform validate

  deploy-dbt:
    needs: deploy-terraform
    runs-on: ubuntu-latest

    # on indique explicitement à dbt où trouver profiles.yml
    env:
      DBT_PROFILES_DIR: dbt
      SF_ACCOUNT:   ${{ secrets.SF_ACCOUNT }}
      SF_USER:      ${{ secrets.SF_USER }}
      SF_PASSWORD:  ${{ secrets.SF_PWD }}
      SF_ROLE:      ${{ secrets.SF_ROLE }}
      SF_DATABASE:  ${{ secrets.SF_DATABASE }}
      SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dbt Snowflake
        run: pip install dbt-snowflake

      - name: Debug dbt (connexion + config)
        run: |
          cd dbt
          dbt debug
        # On ne précise pas de working-directory dans le run grâce au `cd`

      - name: Run models in raw/
        run: |
          cd dbt
          dbt deps
          # Ici on cible explicitement le dossier raw via raw.*
          dbt run --models raw.* --debug

    